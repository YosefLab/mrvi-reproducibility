nextflow.enable.dsl = 2

conda {
    enabled = true
    cacheDir = "${projectDir}/env/.cache"
    useMamba = true
}

params {
    env {
        root = "${projectDir}/env"
        preprocess_data = "${params.env.root}/preprocess_data.yaml"
        run_mrvi = "${params.env.root}/run_mrvi.yaml"
        compute_metrics = "${params.env.root}/compute_metrics.yaml"
    }
    conf {
        root = "${projectDir}/conf"
        dataset = "${params.conf.root}/datasets"
    }
    subworkflow {
        root = "${projectDir}/subworkflows"
        preprocess_data = "${params.subworkflow.root}/preprocess_data/main.nf"
        run_mrvi = "${params.subworkflow.root}/run_mrvi/main.nf"
        compute_metrics = "${params.subworkflow.root}/compute_metrics/main.nf"
    }
    module {
        root = "${projectDir}/modules"
        preprocess_data = "${params.module.root}/preprocess_data.nf"
        fit_mrvi = "${params.module.root}/fit_mrvi.nf"
        get_latent_mrvi = "${params.module.root}/get_latent_mrvi.nf"
        compute_scib_metrics = "${params.module.root}/compute_scib_metrics.nf"
        compute_vendi = "${params.module.root}/compute_vendi.nf"
    }
    script {
        root = "${projectDir}/bin"
        preprocess_data = "${params.script.root}/preprocess_data.py"
        fit_mrvi = "${params.script.root}/fit_mrvi.py"
        get_latent_mrvi = "${params.script.root}/get_latent_mrvi.py"
        compute_scib_metrics = "${params.script.root}/compute_scib_metrics.py"
        compute_vendi = "${params.script.root}/compute_vendi.py"
    }
    input {
        preprocess_data = "${projectDir}/data/raw/*.h5ad"
        run_mrvi = "${params.output.preprocess_data}/*.h5ad"
        compute_metrics = "${params.output.run_mrvi_latent_data}/*.h5ad"
    }
    output {
        preprocess_data = "data/preprocessed"
        run_mrvi_model = "models"
        run_mrvi_setup_data = "data/setup"
        run_mrvi_latent_data = "data/latent"
        compute_metrics = "results"
    }
}